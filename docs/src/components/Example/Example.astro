---
import CodeWrapper from './CodeWrapper.astro';
import OpenInStackblitz from './OpenInStackblitz.astro';

export const c = (...args: (string | boolean)[]) => {
  return args.filter(Boolean).join(' ');
};

/**
 * Interface defining the properties (Props) that can be passed to the Example component.
 * 
 * @interface Props
 * @example
 * ```astro
 * <Example {...props} />
 * ```
 */
export interface Props {
  /**
   * The file path to be processed
   * @type {string}
   */
  path: string;
  /**
   * Flag to control the visibility of code section
   * @property {boolean} [hideCode] - When true, hides the code section of the component.
   * Default is false, showing the code section.
   */
  hideCode?: boolean;
  /**
   * Flag to control whether to hide the preview section.
   * When set to true, the preview section will not be displayed.
   * @type {boolean}
   * @optional
   */
  hidePreview?: boolean;
  /**
   * Whether to hide the Stackblitz editor button.
   * @property {boolean} [hideStackblitz=false] - When true, the Stackblitz editor button will not be displayed
   */
  hideStackblitz?: boolean;
}

const allModules = import.meta.glob('../../examples/**/*', {
  query: '?raw',
  import: 'default',
  eager: true,
}) as Record<string, string>;

for (const path in allModules) {
  if (!path.replace('../../examples/', '').startsWith(Astro.props.path)) {
    delete allModules[path];
  }
}

const files = Astro.props.files ?? {};

for (const modulePath in allModules) {
  let relativePath = modulePath.replace('../../examples/', '').replace(Astro.props.path, '').slice(1);
  if (relativePath.startsWith('/')) {
    relativePath = relativePath.slice(1);
  }
  files[relativePath] = allModules[modulePath];
}

const hideCodeResolved = Astro.props.hideCode ?? false;
const hidePreview = Astro.props.hidePreview ?? false;
---

<div class="example-component-wrapper not-content">
  {!hidePreview && <iframe src={`/instanced-mesh/examples/${Astro.props.path}?p=${Date.now()}`} title={Astro.props.path} class="example-iframe" />}
  {
    !Astro.props.hideStackblitz && (
      <div class="open-in-stackblitz-btn">
        <OpenInStackblitz files={files} />
      </div>
    )
  }
  {!hideCodeResolved && <CodeWrapper files={files} />}
</div>

<style>
  .example-component-wrapper {
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.5rem;
    width: 100%;
    box-shadow: var(--sl-shadow-md);
    position: relative;
  }
  .example-iframe {
    border: 0;
    height: 70vh;
    width: 100%;
    border-radius: 0.5rem 0.5rem 0 0;
    margin-bottom: -8px;
  }

  .open-in-stackblitz-btn {
    position: absolute;
    height: auto;
    top: 1rem;
    right: 1rem;
  }
</style>
